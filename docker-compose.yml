services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
    depends_on:
      - db
    volumes:
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    expose:
      - "${BACKEND_PORT:-8000}"
    labels:
      - traefik.enable=true
      - traefik.http.services.cs2clog-backend.loadbalancer.server.port=${BACKEND_PORT:-8000}
    networks:
      - internal

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Public API base used by SvelteKit (server-side at runtime)
      - PUBLIC_API_BASE=${PUBLIC_API_BASE}
      - ORIGIN=${FRONTEND_URL}
    depends_on:
      - backend
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.services.cs2clog-frontend.loadbalancer.server.port=3000
    networks:
      - internal

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
